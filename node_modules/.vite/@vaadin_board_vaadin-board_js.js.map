{
  "version": 3,
  "sources": ["../.pnpm/@vaadin/board@22.0.0-beta2/node_modules/@vaadin/board/src/vaadin-board.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2021 Vaadin Ltd\n * This program is available under Commercial Vaadin Developer License 4.0, available at https://vaadin.com/license/cvdl-4.0.\n */\nimport '@vaadin/vaadin-license-checker/vaadin-license-checker.js';\nimport './vaadin-board-row.js';\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\n\n/**\n * `<vaadin-board>` is a web component to create flexible responsive layouts\n * and build nice looking dashboards.\n *\n * A `<vaadin-board>` is built using `<vaadin-board-row>` elements containing your child elements.\n * Each board row consists of four columns, and can contain up to four elements. Using column spans\n * you can tune the layout to your liking.\n *\n * ```html\n * <vaadin-board>\n *   <vaadin-board-row>\n *     <div>This could be chart 1</div>\n *     <div>This could be chart 2</div>\n *     <div>This could be chart 3</div>\n *     <div>This could be chart 4</div>\n *   </vaadin-board-row>\n * </vaadin-board>\n * ```\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n */\nclass Board extends ElementMixin(mixinBehaviors([IronResizableBehavior], PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <slot></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-board';\n  }\n\n  /**\n   * @protected\n   */\n  static _finalizeClass() {\n    super._finalizeClass();\n\n    const devModeCallback = window.Vaadin.developmentModeCallback;\n    const licenseChecker = devModeCallback && devModeCallback['vaadin-license-checker'];\n    /* c8 ignore next 3 */\n    if (typeof licenseChecker === 'function') {\n      licenseChecker(Board);\n    }\n  }\n\n  /**\n   * Redraws the board and all rows inside it, if necessary.\n   *\n   * In most cases, board will redraw itself if your reconfigure it. If you dynamically change CSS\n   * which affects this element, then you need to call this method.\n   */\n  redraw() {\n    this.notifyResize();\n  }\n}\n\ncustomElements.define(Board.is, Board);\n\nexport { Board };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAkCA,0BAAoB,aAAa,eAAe,CAAC,wBAAwB,iBAAiB;AAAA,aAC7E,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAUE,KAAK;AACd,WAAO;AAAA;AAAA,SAMF,iBAAiB;AACtB,UAAM;AAEN,UAAM,kBAAkB,OAAO,OAAO;AACtC,UAAM,iBAAiB,mBAAmB,gBAAgB;AAE1D,QAAI,OAAO,mBAAmB,YAAY;AACxC,qBAAe;AAAA;AAAA;AAAA,EAUnB,SAAS;AACP,SAAK;AAAA;AAAA;AAIT,eAAe,OAAO,MAAM,IAAI;",
  "names": []
}

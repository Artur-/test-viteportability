{
  "version": 3,
  "sources": ["../.pnpm/@vaadin/confirm-dialog@22.0.0-beta2/node_modules/@vaadin/confirm-dialog/theme/lumo/vaadin-confirm-dialog-styles.js", "../.pnpm/@vaadin/confirm-dialog@22.0.0-beta2/node_modules/@vaadin/confirm-dialog/src/vaadin-confirm-dialog.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-dialog-overlay',\n  css`\n    :host([theme~='_vaadin-confirm-dialog-dialog-overlay-theme']) [part='content'] {\n      height: auto;\n      box-sizing: content-box;\n    }\n  `,\n  { moduleId: 'lumo-confirm-dialog-overlay' }\n);\n\nregisterStyles(\n  'vaadin-confirm-dialog',\n  css`\n    #content {\n      height: calc(\n        var(--_vaadin-confirm-dialog-content-height) - var(--_vaadin-confirm-dialog-footer-height) - var(--lumo-space-s)\n      );\n      width: var(--_vaadin-confirm-dialog-content-width);\n    }\n\n    [part='header'],\n    .header {\n      margin-top: var(--lumo-space-s);\n      margin-bottom: var(--lumo-space-m);\n    }\n\n    [part='message'] {\n      width: 25em;\n      min-width: 100%;\n      max-width: 100%;\n    }\n\n    [part='footer'] {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n      margin: calc(var(--lumo-space-l) * -1);\n      margin-top: var(--lumo-space-l);\n      padding: 0 var(--lumo-space-l);\n      background-color: var(--lumo-contrast-5pct);\n    }\n\n    [part='footer'] div {\n      margin-top: var(--lumo-space-s);\n      margin-bottom: var(--lumo-space-s);\n    }\n\n    vaadin-button[theme~='tertiary'] {\n      padding-left: var(--lumo-space-s);\n      padding-right: var(--lumo-space-s);\n    }\n\n    .cancel-button {\n      flex-grow: 1;\n    }\n\n    :not([dir='rtl']) > .cancel-button {\n      margin-left: calc(var(--lumo-space-s) * -1);\n    }\n\n    :not([dir='rtl']) > .confirm-button {\n      margin-right: calc(var(--lumo-space-s) * -1);\n    }\n\n    :not([dir='rtl']) > .reject-button,\n    :not([dir='rtl']) > .confirm-button {\n      margin-left: var(--lumo-space-s);\n    }\n\n    @media (max-width: 360px) {\n      [part='footer'] {\n        flex-direction: column-reverse;\n      }\n\n      [part='footer'] div {\n        margin: var(--lumo-space-xs) calc(var(--lumo-space-l) / -2) calc(var(--lumo-space-xs) * -1);\n      }\n\n      [part='footer'] vaadin-button,\n      [part='footer'] ::slotted(*) {\n        width: 100%;\n        margin-top: var(--lumo-space-xs);\n        margin-bottom: var(--lumo-space-xs);\n      }\n\n      [part='footer'] .confirm-button {\n        margin-top: var(--lumo-space-s);\n      }\n\n      [part='footer'] .cancel-button {\n        margin-bottom: var(--lumo-space-s);\n      }\n    }\n\n    /* RTL specific styles */\n    [dir='rtl'] > .cancel-button {\n      margin-right: calc(var(--lumo-space-s) * -1);\n    }\n\n    [dir='rtl'] > .confirm-button {\n      margin-left: calc(var(--lumo-space-s) * -1);\n    }\n\n    [dir='rtl'] > .reject-button,\n    [dir='rtl'] > .confirm-button {\n      margin-right: var(--lumo-space-s);\n    }\n  `,\n  { moduleId: 'lumo-confirm-dialog' }\n);\n", "/**\n * @license\n * Copyright (c) 2018 - 2021 Vaadin Ltd\n * This program is available under Commercial Vaadin Developer License 4.0, available at https://vaadin.com/license/cvdl-4.0.\n */\nimport '@vaadin/vaadin-license-checker/vaadin-license-checker.js';\nimport '@vaadin/button/src/vaadin-button.js';\nimport '@vaadin/dialog/src/vaadin-dialog.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-confirm-dialog>` is a Web Component for showing alerts and asking for user confirmation.\n *\n * ```\n * <vaadin-confirm-dialog cancel>\n *   There are unsaved changes. Do you really want to leave?\n * </vaadin-confirm-dialog>\n * ```\n *\n * ### Styling\n *\n * The following Shadow DOM parts are available for styling the dialog parts:\n *\n * Part name  | Description\n * -----------|---------------------------------------------------------|\n * `header`   | Header of the confirmation dialog\n * `message`  | Container for the message of the dialog\n * `footer`   | Container for the buttons\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * ### Custom content\n *\n * The following parts are available for replacement:\n *\n * Slot name         | Description\n * ------------------|---------------------------------------------------------|\n * `header`          | Header of the confirmation dialog\n * `message`         | Container for the message of the dialog\n * `cancel-button`   | Container for the Cancel button\n * `reject-button`   | Container for the Reject button\n * `confirm-button`  | Container for the Confirm button\n *\n * @fires {Event} confirm - Fired when Confirm button was pressed.\n * @fires {Event} cancel - Fired when Cancel button or Escape key was pressed.\n * @fires {Event} reject - Fired when Reject button was pressed.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass ConfirmDialog extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: none;\n          --_vaadin-confirm-dialog-content-width: auto;\n          --_vaadin-confirm-dialog-content-height: auto;\n          --_vaadin-confirm-dialog-footer-height: auto;\n        }\n      </style>\n\n      <vaadin-dialog\n        id=\"dialog\"\n        opened=\"{{opened}}\"\n        aria-label=\"[[_getAriaLabel(header)]]\"\n        theme$=\"_vaadin-confirm-dialog-dialog-overlay-theme [[theme]]\"\n        no-close-on-outside-click\n        no-close-on-esc=\"[[noCloseOnEsc]]\"\n      ></vaadin-dialog>\n\n      <template id=\"dialogTemplate\">\n        <div id=\"content\">\n          <div part=\"header\">\n            <slot name=\"header\">\n              <h3 class=\"header\">[[header]]</h3>\n            </slot>\n          </div>\n\n          <div part=\"message\" id=\"message\">\n            <slot></slot>\n            [[message]]\n          </div>\n        </div>\n\n        <div part=\"footer\">\n          <div class=\"cancel-button\">\n            <slot name=\"cancel-button\">\n              <vaadin-button\n                id=\"cancel\"\n                theme$=\"[[cancelTheme]]\"\n                on-click=\"_cancel\"\n                hidden$=\"[[!cancel]]\"\n                aria-describedby=\"message\"\n              >\n                [[cancelText]]\n              </vaadin-button>\n            </slot>\n          </div>\n          <div class=\"reject-button\">\n            <slot name=\"reject-button\">\n              <vaadin-button\n                id=\"reject\"\n                theme$=\"[[rejectTheme]]\"\n                on-click=\"_reject\"\n                hidden$=\"[[!reject]]\"\n                aria-describedby=\"message\"\n              >\n                [[rejectText]]\n              </vaadin-button>\n            </slot>\n          </div>\n          <div class=\"confirm-button\">\n            <slot name=\"confirm-button\">\n              <vaadin-button id=\"confirm\" theme$=\"[[confirmTheme]]\" on-click=\"_confirm\" aria-describedby=\"message\">\n                [[confirmText]]\n              </vaadin-button>\n            </slot>\n          </div>\n        </div>\n      </template>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-confirm-dialog';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the overlay is currently displayed.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_openedChanged'\n      },\n\n      /**\n       * Set the confirmation dialog title.\n       * @type {string}\n       */\n      header: {\n        type: String,\n        value: ''\n      },\n\n      /**\n       * Set the message or confirmation question.\n       */\n      message: {\n        type: String\n      },\n\n      /**\n       * Text displayed on confirm-button.\n       * @attr {string} confirm-text\n       * @type {string}\n       */\n      confirmText: {\n        type: String,\n        value: 'Confirm'\n      },\n\n      /**\n       * Theme for a confirm-button.\n       * @attr {string} confirm-theme\n       * @type {string}\n       */\n      confirmTheme: {\n        type: String,\n        value: 'primary'\n      },\n\n      /**\n       * Set to true to disable closing dialog on Escape press\n       * @attr {boolean} no-close-on-esc\n       * @type {boolean}\n       */\n      noCloseOnEsc: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Whether to show cancel button or not.\n       * @type {boolean}\n       */\n      reject: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n\n      /**\n       * Text displayed on reject-button.\n       * @attr {string} reject-text\n       * @type {string}\n       */\n      rejectText: {\n        type: String,\n        value: 'Reject'\n      },\n\n      /**\n       * Theme for a reject-button.\n       * @attr {string} reject-theme\n       * @type {string}\n       */\n      rejectTheme: {\n        type: String,\n        value: 'error tertiary'\n      },\n\n      /**\n       * Whether to show cancel button or not.\n       * @type {boolean}\n       */\n      cancel: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n\n      /**\n       * Text displayed on cancel-button.\n       * @attr {string} cancel-text\n       * @type {string}\n       */\n      cancelText: {\n        type: String,\n        value: 'Cancel'\n      },\n\n      /**\n       * Theme for a cancel-button.\n       * @attr {string} cancel-theme\n       * @type {string}\n       */\n      cancelTheme: {\n        type: String,\n        value: 'tertiary'\n      },\n\n      /** @private */\n      _confirmButton: {\n        type: Element\n      }\n    };\n  }\n\n  /** @protected */\n  static _finalizeClass() {\n    super._finalizeClass();\n\n    const devModeCallback = window.Vaadin.developmentModeCallback;\n    const licenseChecker = devModeCallback && devModeCallback['vaadin-license-checker'];\n    /* c8 ignore next 3 */\n    if (typeof licenseChecker === 'function') {\n      licenseChecker(ConfirmDialog);\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.$.dialog.$.overlay.addEventListener('vaadin-overlay-escape-press', this._escPressed.bind(this));\n    if (this._dimensions) {\n      Object.keys(this._dimensions).forEach((name) => {\n        this._setDimension(name, this._dimensions[name]);\n      });\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @protected\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'dir') {\n      const value = newValue === 'rtl';\n      this.__isRTL = value;\n      this.opened && this.__toggleContentRTL(value);\n    }\n  }\n\n  /** @private */\n  __toggleContentRTL(rtl) {\n    const contentBlock = this.$.dialog.$.overlay.content.querySelector('#content');\n    const footerBlock = this.$.dialog.$.overlay.content.querySelector('[part=footer]');\n    if (rtl) {\n      contentBlock.setAttribute('dir', 'rtl');\n      footerBlock.setAttribute('dir', 'rtl');\n    } else {\n      contentBlock.removeAttribute('dir');\n      footerBlock.removeAttribute('dir');\n    }\n  }\n\n  /** @private */\n  _openedChanged() {\n    if (!this.opened) {\n      return;\n    }\n\n    // TODO: A temporary hack as far as `vaadin-dialog` doesn't support the Polymer Template API anymore.\n    this.$.dialog.$.overlay.template = this.$.dialogTemplate;\n\n    const overlay = this.$.dialog.$.overlay;\n\n    Array.from(this.childNodes).forEach((c) => {\n      const newChild = overlay.$.content.appendChild(c);\n      if (newChild.getAttribute && newChild.getAttribute('slot') == 'confirm-button' && newChild.focus) {\n        this._confirmButton = newChild;\n      }\n    });\n\n    this.__toggleContentRTL(this.__isRTL);\n\n    requestAnimationFrame(() => {\n      const confirmButton = this._confirmButton || overlay.content.querySelector('#confirm');\n      confirmButton.focus();\n\n      const { height } = getComputedStyle(overlay.content.querySelector('[part=footer]'));\n      this.$.dialog.$.overlay.style.setProperty('--_vaadin-confirm-dialog-footer-height', height);\n    });\n  }\n\n  /** @private */\n  _escPressed(event) {\n    if (!event.defaultPrevented) {\n      this._cancel();\n    }\n  }\n\n  /** @private */\n  _confirm() {\n    this.dispatchEvent(new CustomEvent('confirm'));\n    this.opened = false;\n  }\n\n  /** @private */\n  _cancel() {\n    this.dispatchEvent(new CustomEvent('cancel'));\n    this.opened = false;\n  }\n\n  /** @private */\n  _reject() {\n    this.dispatchEvent(new CustomEvent('reject'));\n    this.opened = false;\n  }\n\n  /** @private */\n  _getAriaLabel(header) {\n    return header || 'confirmation';\n  }\n\n  /** @private */\n  _setWidth(width) {\n    this._setDimensionIfAttached('width', width);\n  }\n\n  /** @private */\n  _setHeight(height) {\n    this._setDimensionIfAttached('height', height);\n  }\n\n  /** @private */\n  _setDimensionIfAttached(name, value) {\n    if (this.$ && this.$.dialog) {\n      this._setDimension(name, value);\n    } else {\n      this._dimensions = this._dimensions || {};\n      this._dimensions[name] = value;\n    }\n  }\n\n  /** @private */\n  _setDimension(name, value) {\n    this.$.dialog.$.overlay.style.setProperty(`--_vaadin-confirm-dialog-content-${name}`, value);\n  }\n\n  /**\n   * @event confirm\n   * fired when Confirm button was pressed.\n   */\n\n  /**\n   * @event cancel\n   * fired when Cancel button or Escape key was pressed.\n   */\n\n  /**\n   * @event reject\n   * fired when Reject button was pressed.\n   */\n}\n\ncustomElements.define(ConfirmDialog.is, ConfirmDialog);\n\nexport { ConfirmDialog };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAIA,eACE,yBACA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,EAAE,UAAU;AAGd,eACE,yBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgGA,EAAE,UAAU;;;ACjHd,AAsDA,kCAA4B,aAAa,cAAc,iBAAiB;AAAA,aAC3D,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAwEE,KAAK;AACd,WAAO;AAAA;AAAA,aAGE,aAAa;AACtB,WAAO;AAAA,MAKL,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,UAAU;AAAA;AAAA,MAOZ,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAMT,SAAS;AAAA,QACP,MAAM;AAAA;AAAA,MAQR,aAAa;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAQT,cAAc;AAAA,QACZ,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAQT,cAAc;AAAA,QACZ,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAOT,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,oBAAoB;AAAA,QACpB,OAAO;AAAA;AAAA,MAQT,YAAY;AAAA,QACV,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAQT,aAAa;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAOT,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,oBAAoB;AAAA,QACpB,OAAO;AAAA;AAAA,MAQT,YAAY;AAAA,QACV,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAQT,aAAa;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAIT,gBAAgB;AAAA,QACd,MAAM;AAAA;AAAA;AAAA;AAAA,SAML,iBAAiB;AACtB,UAAM;AAEN,UAAM,kBAAkB,OAAO,OAAO;AACtC,UAAM,iBAAiB,mBAAmB,gBAAgB;AAE1D,QAAI,OAAO,mBAAmB,YAAY;AACxC,qBAAe;AAAA;AAAA;AAAA,EAKnB,QAAQ;AACN,UAAM;AAEN,SAAK,EAAE,OAAO,EAAE,QAAQ,iBAAiB,+BAA+B,KAAK,YAAY,KAAK;AAC9F,QAAI,KAAK,aAAa;AACpB,aAAO,KAAK,KAAK,aAAa,QAAQ,CAAC,SAAS;AAC9C,aAAK,cAAc,MAAM,KAAK,YAAY;AAAA;AAAA;AAAA;AAAA,EAWhD,yBAAyB,MAAM,UAAU,UAAU;AACjD,UAAM,yBAAyB,MAAM,UAAU;AAC/C,QAAI,SAAS,OAAO;AAClB,YAAM,QAAQ,aAAa;AAC3B,WAAK,UAAU;AACf,WAAK,UAAU,KAAK,mBAAmB;AAAA;AAAA;AAAA,EAK3C,mBAAmB,KAAK;AACtB,UAAM,eAAe,KAAK,EAAE,OAAO,EAAE,QAAQ,QAAQ,cAAc;AACnE,UAAM,cAAc,KAAK,EAAE,OAAO,EAAE,QAAQ,QAAQ,cAAc;AAClE,QAAI,KAAK;AACP,mBAAa,aAAa,OAAO;AACjC,kBAAY,aAAa,OAAO;AAAA,WAC3B;AACL,mBAAa,gBAAgB;AAC7B,kBAAY,gBAAgB;AAAA;AAAA;AAAA,EAKhC,iBAAiB;AACf,QAAI,CAAC,KAAK,QAAQ;AAChB;AAAA;AAIF,SAAK,EAAE,OAAO,EAAE,QAAQ,WAAW,KAAK,EAAE;AAE1C,UAAM,UAAU,KAAK,EAAE,OAAO,EAAE;AAEhC,UAAM,KAAK,KAAK,YAAY,QAAQ,CAAC,MAAM;AACzC,YAAM,WAAW,QAAQ,EAAE,QAAQ,YAAY;AAC/C,UAAI,SAAS,gBAAgB,SAAS,aAAa,WAAW,oBAAoB,SAAS,OAAO;AAChG,aAAK,iBAAiB;AAAA;AAAA;AAI1B,SAAK,mBAAmB,KAAK;AAE7B,0BAAsB,MAAM;AAC1B,YAAM,gBAAgB,KAAK,kBAAkB,QAAQ,QAAQ,cAAc;AAC3E,oBAAc;AAEd,YAAM,EAAE,WAAW,iBAAiB,QAAQ,QAAQ,cAAc;AAClE,WAAK,EAAE,OAAO,EAAE,QAAQ,MAAM,YAAY,0CAA0C;AAAA;AAAA;AAAA,EAKxF,YAAY,OAAO;AACjB,QAAI,CAAC,MAAM,kBAAkB;AAC3B,WAAK;AAAA;AAAA;AAAA,EAKT,WAAW;AACT,SAAK,cAAc,IAAI,YAAY;AACnC,SAAK,SAAS;AAAA;AAAA,EAIhB,UAAU;AACR,SAAK,cAAc,IAAI,YAAY;AACnC,SAAK,SAAS;AAAA;AAAA,EAIhB,UAAU;AACR,SAAK,cAAc,IAAI,YAAY;AACnC,SAAK,SAAS;AAAA;AAAA,EAIhB,cAAc,QAAQ;AACpB,WAAO,UAAU;AAAA;AAAA,EAInB,UAAU,OAAO;AACf,SAAK,wBAAwB,SAAS;AAAA;AAAA,EAIxC,WAAW,QAAQ;AACjB,SAAK,wBAAwB,UAAU;AAAA;AAAA,EAIzC,wBAAwB,MAAM,OAAO;AACnC,QAAI,KAAK,KAAK,KAAK,EAAE,QAAQ;AAC3B,WAAK,cAAc,MAAM;AAAA,WACpB;AACL,WAAK,cAAc,KAAK,eAAe;AACvC,WAAK,YAAY,QAAQ;AAAA;AAAA;AAAA,EAK7B,cAAc,MAAM,OAAO;AACzB,SAAK,EAAE,OAAO,EAAE,QAAQ,MAAM,YAAY,oCAAoC,QAAQ;AAAA;AAAA;AAmB1F,eAAe,OAAO,cAAc,IAAI;",
  "names": []
}

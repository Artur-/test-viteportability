import {
  NumberField
} from "./chunk-A7KFGG55.js";
import "./chunk-LLY5B476.js";
import "./chunk-4V7HTHEB.js";
import "./chunk-FXDBZGKI.js";
import "./chunk-4YC3PK3E.js";
import "./chunk-HDZUK7DT.js";
import "./chunk-ZLYHCBTY.js";
import "./chunk-G7RHUQOA.js";
import "./chunk-PSOWVSIC.js";
import "./chunk-2QU43T3L.js";
import "./chunk-M63LEPKS.js";
import "./chunk-2WAZ2OPO.js";
import "./chunk-MRY7CVKJ.js";
import "./chunk-VBV2WJY4.js";
import "./chunk-VD23N2FG.js";
import "./chunk-Y3KRHGW3.js";
import "./chunk-6TGXYB6C.js";
import "./chunk-RUXXNLZ4.js";
import "./chunk-SOI6EIGV.js";
import "./chunk-ESTDBV53.js";
import "./chunk-YRRWCJGV.js";
import "./chunk-CBMAWUYA.js";
import "./chunk-J5VFVUBT.js";
import "./chunk-GBF7XL6S.js";
import "./chunk-LYMUE5P7.js";
import "./chunk-AILCGYJH.js";
import "./chunk-BHAZN44K.js";
import "./chunk-OIQZQ3SK.js";
import "./chunk-YGHRZLAU.js";
import "./chunk-5VJMXRGB.js";
import "./chunk-XALJ24ZG.js";
import "./chunk-GN24F3WZ.js";
import "./chunk-HDWYYSVS.js";
import "./chunk-PN57JW3E.js";
import "./chunk-FHJNRKKV.js";
import "./chunk-JJSCQCEV.js";
import "./chunk-PHKVH5MM.js";
import "./chunk-J6GZCXFQ.js";

// node_modules/.pnpm/@vaadin/integer-field@22.0.0-beta2/node_modules/@vaadin/integer-field/src/vaadin-integer-field.js
var IntegerField = class extends NumberField {
  static get is() {
    return "vaadin-integer-field";
  }
  static get properties() {
    return {
      _enabledCharPattern: {
        value: "[-+\\d]"
      }
    };
  }
  _valueChanged(newVal, oldVal) {
    if (newVal !== "" && !this.__isInteger(newVal)) {
      console.warn(`Trying to set non-integer value "${newVal}" to <vaadin-integer-field>. Clearing the value.`);
      this.value = "";
      return;
    }
    super._valueChanged(newVal, oldVal);
  }
  _stepChanged(newVal, oldVal) {
    if (!this.__hasOnlyDigits(newVal)) {
      console.warn(`Trying to set invalid step size "${newVal}", which is not a positive integer, to <vaadin-integer-field>. Resetting the default value 1.`);
      this.step = 1;
      return;
    }
    super._stepChanged(newVal, oldVal);
  }
  __isInteger(value) {
    return /^(-\d)?\d*$/.test(String(value));
  }
  __hasOnlyDigits(value) {
    return /^\d*$/.test(String(value));
  }
};
customElements.define(IntegerField.is, IntegerField);
/**
 * @license
 * Copyright (c) 2021 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin_integer-field_theme_lumo_vaadin-integer-field_js.js.map
